{"ast":null,"code":"var _jsxFileName = \"/Users/zilianghuang/Desktop/sql-checker/src/components/TableForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TableForm({\n  formId,\n  onDeleteTable,\n  onDeleteForm,\n  updateTableForm,\n  availableTables\n}) {\n  _s();\n  const [tableName, setTableName] = useState('');\n  const [columns, setColumns] = useState([{\n    name: '',\n    dataType: 'varchar',\n    foreignKey: ''\n  }]); // Default column\n\n  useEffect(() => {\n    // Update the parent component with the current form data\n    updateTableForm({\n      id: formId,\n      tableName,\n      columns\n    });\n  }, [tableName, columns]);\n  const addColumn = () => {\n    setColumns([...columns, {\n      name: '',\n      dataType: 'varchar',\n      foreignKey: ''\n    }]);\n  };\n  const updateColumn = (index, key, value) => {\n    const newColumns = [...columns];\n    newColumns[index][key] = value;\n    setColumns(newColumns);\n  };\n  const removeColumn = index => {\n    setColumns(columns.filter((_, i) => i !== index));\n  };\n  const handleDelete = () => {\n    if (tableName) {\n      console.log(`Attempting to delete table: ${tableName}`);\n      onDeleteTable(tableName);\n    }\n    onDeleteForm(formId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: tableName,\n      onChange: e => setTableName(e.target.value),\n      placeholder: \"Table Name\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), columns.map((column, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: column.name,\n        onChange: e => updateColumn(index, 'name', e.target.value),\n        placeholder: \"Column Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: column.dataType,\n        onChange: e => updateColumn(index, 'dataType', e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"varchar\",\n          children: \"VARCHAR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"integer\",\n          children: \"INTEGER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"date\",\n          children: \"DATE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: column.foreignKey,\n        onChange: e => updateColumn(index, 'foreignKey', e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"No Foreign Key\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), availableTables.map(table => table.columns.map(col => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: `${table.name}.${col.name}`,\n          children: `${table.name}.${col.name}`\n        }, `${table.name}.${col.name}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this)))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => removeColumn(index),\n        children: \"Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addColumn,\n      children: \"Add Column\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDelete,\n      children: \"Delete Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(TableForm, \"s9hO8O4Th11vjpDvmeh/NcFbNDI=\");\n_c = TableForm;\nexport default TableForm;\nvar _c;\n$RefreshReg$(_c, \"TableForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TableForm","formId","onDeleteTable","onDeleteForm","updateTableForm","availableTables","_s","tableName","setTableName","columns","setColumns","name","dataType","foreignKey","id","addColumn","updateColumn","index","key","value","newColumns","removeColumn","filter","_","i","handleDelete","console","log","className","children","type","onChange","e","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","map","column","table","col","onClick","_c","$RefreshReg$"],"sources":["/Users/zilianghuang/Desktop/sql-checker/src/components/TableForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction TableForm({ formId, onDeleteTable, onDeleteForm, updateTableForm, availableTables }) {\n  const [tableName, setTableName] = useState('');\n  const [columns, setColumns] = useState([{ name: '', dataType: 'varchar', foreignKey: '' }]); // Default column\n\n  useEffect(() => {\n    // Update the parent component with the current form data\n    updateTableForm({ id: formId, tableName, columns });\n  }, [tableName, columns]);\n\n  const addColumn = () => {\n    setColumns([...columns, { name: '', dataType: 'varchar', foreignKey: '' }]);\n  };\n\n  const updateColumn = (index, key, value) => {\n    const newColumns = [...columns];\n    newColumns[index][key] = value;\n    setColumns(newColumns);\n  };\n\n  const removeColumn = (index) => {\n    setColumns(columns.filter((_, i) => i !== index));\n  };\n\n  const handleDelete = () => {\n    if (tableName) {\n      console.log(`Attempting to delete table: ${tableName}`);\n      onDeleteTable(tableName);\n    }\n    onDeleteForm(formId);\n  };\n\n  return (\n    <div className=\"table-form\">\n      <input\n        type=\"text\"\n        value={tableName}\n        onChange={(e) => setTableName(e.target.value)}\n        placeholder=\"Table Name\"\n        required\n      />\n      {columns.map((column, index) => (\n        <div key={index} className=\"column-row\">\n          <input\n            type=\"text\"\n            value={column.name}\n            onChange={(e) => updateColumn(index, 'name', e.target.value)}\n            placeholder=\"Column Name\"\n            required\n          />\n          <select\n            value={column.dataType}\n            onChange={(e) => updateColumn(index, 'dataType', e.target.value)}\n          >\n            <option value=\"varchar\">VARCHAR</option>\n            <option value=\"integer\">INTEGER</option>\n            <option value=\"date\">DATE</option>\n          </select>\n          <select\n            value={column.foreignKey}\n            onChange={(e) => updateColumn(index, 'foreignKey', e.target.value)}\n          >\n            <option value=\"\">No Foreign Key</option>\n            {availableTables.map((table) =>\n              table.columns.map((col) => (\n                <option key={`${table.name}.${col.name}`} value={`${table.name}.${col.name}`}>\n                  {`${table.name}.${col.name}`}\n                </option>\n              ))\n            )}\n          </select>\n          <button onClick={() => removeColumn(index)}>Remove</button>\n        </div>\n      ))}\n      <button onClick={addColumn}>Add Column</button>\n      <button onClick={handleDelete}>Delete Table</button>\n    </div>\n  );\n}\n\nexport default TableForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}