{"ast":null,"code":"var _jsxFileName = \"/Users/zilianghuang/Desktop/sql-checker/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TableForm from './components/TableForm';\nimport TableList from './components/TableList';\nimport SQLPlayground from './components/SQLPlayground'; // Ensure this import is correct\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tables, setTables] = useState([]);\n  const [tableForms, setTableForms] = useState([]);\n  const addTableForm = () => {\n    setTableForms([...tableForms, {\n      id: Date.now(),\n      tableName: '',\n      columns: []\n    }]);\n  };\n  const updateTableForm = updatedForm => {\n    setTableForms(tableForms.map(form => form.id === updatedForm.id ? updatedForm : form));\n  };\n  const deleteTable = async tableName => {\n    try {\n      console.log(`Attempting to delete table: ${tableName}`);\n      await axios.delete(`http://localhost:3002/api/tables/${tableName}`);\n      setTables(tables.filter(t => t.name !== tableName));\n    } catch (error) {\n      console.error('Failed to delete table:', error);\n    }\n  };\n  const deleteTableForm = formId => {\n    setTableForms(tableForms.filter(form => form.id !== formId));\n  };\n  const generateAllData = async () => {\n    try {\n      const tablesToCreate = tableForms.map(form => ({\n        name: form.tableName,\n        columns: form.columns\n      }));\n      for (const table of tablesToCreate) {\n        await axios.post('http://localhost:3002/api/tables', table);\n      }\n      await axios.post('http://localhost:3002/api/generate-data');\n      alert('Tables created and random data generated for all tables.');\n      setTables(tablesToCreate);\n    } catch (error) {\n      console.error('Failed to generate data:', error);\n      alert('Failed to generate data.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"SQL Database Creator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTableForm,\n      children: \"Create Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), tableForms.map(form => /*#__PURE__*/_jsxDEV(TableForm, {\n      formId: form.id,\n      onDeleteTable: deleteTable,\n      onDeleteForm: deleteTableForm,\n      updateTableForm: updateTableForm\n    }, form.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateAllData,\n      children: \"Generate Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableList, {\n      tables: tables,\n      onDeleteTable: deleteTable\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SQLPlayground, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"cDFcuGTanmnS1p528atDOq7T65U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","TableForm","TableList","SQLPlayground","axios","jsxDEV","_jsxDEV","App","_s","tables","setTables","tableForms","setTableForms","addTableForm","id","Date","now","tableName","columns","updateTableForm","updatedForm","map","form","deleteTable","console","log","delete","filter","t","name","error","deleteTableForm","formId","generateAllData","tablesToCreate","table","post","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onDeleteTable","onDeleteForm","_c","$RefreshReg$"],"sources":["/Users/zilianghuang/Desktop/sql-checker/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport TableForm from './components/TableForm';\nimport TableList from './components/TableList';\nimport SQLPlayground from './components/SQLPlayground'; // Ensure this import is correct\nimport axios from 'axios';\n\nfunction App() {\n  const [tables, setTables] = useState([]);\n  const [tableForms, setTableForms] = useState([]);\n\n  const addTableForm = () => {\n    setTableForms([...tableForms, { id: Date.now(), tableName: '', columns: [] }]);\n  };\n\n  const updateTableForm = (updatedForm) => {\n    setTableForms(tableForms.map(form => form.id === updatedForm.id ? updatedForm : form));\n  };\n\n  const deleteTable = async (tableName) => {\n    try {\n      console.log(`Attempting to delete table: ${tableName}`);\n      await axios.delete(`http://localhost:3002/api/tables/${tableName}`);\n      setTables(tables.filter(t => t.name !== tableName));\n    } catch (error) {\n      console.error('Failed to delete table:', error);\n    }\n  };\n\n  const deleteTableForm = (formId) => {\n    setTableForms(tableForms.filter(form => form.id !== formId));\n  };\n\n  const generateAllData = async () => {\n    try {\n      const tablesToCreate = tableForms.map(form => ({\n        name: form.tableName,\n        columns: form.columns\n      }));\n\n      for (const table of tablesToCreate) {\n        await axios.post('http://localhost:3002/api/tables', table);\n      }\n\n      await axios.post('http://localhost:3002/api/generate-data');\n      alert('Tables created and random data generated for all tables.');\n      setTables(tablesToCreate);\n    } catch (error) {\n      console.error('Failed to generate data:', error);\n      alert('Failed to generate data.');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>SQL Database Creator</h1>\n      <button onClick={addTableForm}>Create Table</button>\n      {tableForms.map(form => (\n        <TableForm\n          key={form.id}\n          formId={form.id}\n          onDeleteTable={deleteTable}\n          onDeleteForm={deleteTableForm}\n          updateTableForm={updateTableForm}\n        />\n      ))}\n      <button onClick={generateAllData}>Generate Data</button>\n      <TableList tables={tables} onDeleteTable={deleteTable} />\n      <SQLPlayground />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}