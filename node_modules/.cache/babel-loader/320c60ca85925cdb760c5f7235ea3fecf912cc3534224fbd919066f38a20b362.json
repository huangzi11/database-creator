{"ast":null,"code":"var _jsxFileName = \"/Users/zilianghuang/Desktop/sql-checker/src/components/ColumnForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ColumnForm({\n  onAddColumn\n}) {\n  _s();\n  const [columnName, setColumnName] = useState('');\n  const [dataType, setDataType] = useState('varchar');\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (columnName) {\n      onAddColumn({\n        name: columnName,\n        dataType\n      });\n      setColumnName('');\n      setDataType('varchar');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: columnName,\n      onChange: e => setColumnName(e.target.value),\n      placeholder: \"Column Name\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: dataType,\n      onChange: e => setDataType(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"varchar\",\n        children: \"VARCHAR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"integer\",\n        children: \"INTEGER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"date\",\n        children: \"DATE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Add Column\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(ColumnForm, \"RxYfhXydt91pg5OAqjLyxlcKwmw=\");\n_c = ColumnForm;\nexport default ColumnForm;\nvar _c;\n$RefreshReg$(_c, \"ColumnForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ColumnForm","onAddColumn","_s","columnName","setColumnName","dataType","setDataType","handleSubmit","e","preventDefault","name","children","type","value","onChange","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/zilianghuang/Desktop/sql-checker/src/components/ColumnForm.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction ColumnForm({ onAddColumn }) {\n  const [columnName, setColumnName] = useState('');\n  const [dataType, setDataType] = useState('varchar');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (columnName) {\n      onAddColumn({ name: columnName, dataType });\n      setColumnName('');\n      setDataType('varchar');\n    }\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={columnName}\n        onChange={(e) => setColumnName(e.target.value)}\n        placeholder=\"Column Name\"\n        required\n      />\n      <select value={dataType} onChange={(e) => setDataType(e.target.value)}>\n        <option value=\"varchar\">VARCHAR</option>\n        <option value=\"integer\">INTEGER</option>\n        <option value=\"date\">DATE</option>\n      </select>\n      <button onClick={handleSubmit}>Add Column</button>\n    </div>\n  );\n}\n\nexport default ColumnForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,UAAUA,CAAC;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EACnC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,SAAS,CAAC;EAEnD,MAAMU,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIN,UAAU,EAAE;MACdF,WAAW,CAAC;QAAES,IAAI,EAAEP,UAAU;QAAEE;MAAS,CAAC,CAAC;MAC3CD,aAAa,CAAC,EAAE,CAAC;MACjBE,WAAW,CAAC,SAAS,CAAC;IACxB;EACF,CAAC;EAED,oBACEP,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MACEa,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEV,UAAW;MAClBW,QAAQ,EAAGN,CAAC,IAAKJ,aAAa,CAACI,CAAC,CAACO,MAAM,CAACF,KAAK,CAAE;MAC/CG,WAAW,EAAC,aAAa;MACzBC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACFtB,OAAA;MAAQc,KAAK,EAAER,QAAS;MAACS,QAAQ,EAAGN,CAAC,IAAKF,WAAW,CAACE,CAAC,CAACO,MAAM,CAACF,KAAK,CAAE;MAAAF,QAAA,gBACpEZ,OAAA;QAAQc,KAAK,EAAC,SAAS;QAAAF,QAAA,EAAC;MAAO;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACxCtB,OAAA;QAAQc,KAAK,EAAC,SAAS;QAAAF,QAAA,EAAC;MAAO;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACxCtB,OAAA;QAAQc,KAAK,EAAC,MAAM;QAAAF,QAAA,EAAC;MAAI;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eACTtB,OAAA;MAAQuB,OAAO,EAAEf,YAAa;MAAAI,QAAA,EAAC;IAAU;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEV;AAACnB,EAAA,CA9BQF,UAAU;AAAAuB,EAAA,GAAVvB,UAAU;AAgCnB,eAAeA,UAAU;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}