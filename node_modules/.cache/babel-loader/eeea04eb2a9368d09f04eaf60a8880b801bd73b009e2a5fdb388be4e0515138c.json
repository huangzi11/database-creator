{"ast":null,"code":"var _jsxFileName = \"/Users/zilianghuang/Desktop/sql-checker/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css'; // Import the CSS file\nimport TableForm from './components/TableForm';\nimport TableList from './components/TableList';\nimport SQLPlayground from './components/SQLPlayground'; // Ensure this import is correct\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tables, setTables] = useState([]);\n  const [tableForms, setTableForms] = useState([]);\n  useEffect(() => {\n    // Fetch existing tables to provide options for foreign keys\n    const fetchTables = async () => {\n      try {\n        const response = await axios.get('http://localhost:3002/api/tables');\n        setTables(response.data.tables);\n      } catch (error) {\n        console.error('Failed to fetch tables:', error);\n      }\n    };\n    fetchTables();\n  }, []);\n  const addTableForm = () => {\n    setTableForms([...tableForms, {\n      id: Date.now(),\n      tableName: '',\n      columns: [{\n        name: '',\n        dataType: 'varchar',\n        foreignKey: ''\n      }]\n    }]);\n  };\n  const updateTableForm = updatedForm => {\n    setTableForms(tableForms.map(form => form.id === updatedForm.id ? updatedForm : form));\n  };\n  const deleteTable = async tableName => {\n    try {\n      console.log(`Attempting to delete table: ${tableName}`);\n      await axios.delete(`http://localhost:3002/api/tables/${tableName}`);\n      setTables(tables.filter(t => t.name !== tableName));\n    } catch (error) {\n      console.error('Failed to delete table:', error);\n    }\n  };\n  const deleteTableForm = formId => {\n    setTableForms(tableForms.filter(form => form.id !== formId));\n  };\n  const generateAllData = async () => {\n    try {\n      const tablesToCreate = tableForms.map(form => ({\n        name: form.tableName,\n        columns: form.columns\n      }));\n      for (const table of tablesToCreate) {\n        await axios.post('http://localhost:3002/api/tables', table);\n      }\n      await axios.post('http://localhost:3002/api/generate-data');\n      alert('Tables created and random data generated for all tables.');\n      setTables(tablesToCreate);\n    } catch (error) {\n      console.error('Failed to generate data:', error);\n      alert('Failed to generate data.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"SQL Database Creator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTableForm,\n      children: \"Create Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), tableForms.map(form => /*#__PURE__*/_jsxDEV(TableForm, {\n      formId: form.id,\n      onDeleteTable: deleteTable,\n      onDeleteForm: deleteTableForm,\n      updateTableForm: updateTableForm,\n      availableTables: tables\n    }, form.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateAllData,\n      children: \"Generate Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableList, {\n      tables: tables,\n      onDeleteTable: deleteTable\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SQLPlayground, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WH3i5ItY0lwSKaFPI32W80W4m5E=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TableForm","TableList","SQLPlayground","axios","jsxDEV","_jsxDEV","App","_s","tables","setTables","tableForms","setTableForms","fetchTables","response","get","data","error","console","addTableForm","id","Date","now","tableName","columns","name","dataType","foreignKey","updateTableForm","updatedForm","map","form","deleteTable","log","delete","filter","t","deleteTableForm","formId","generateAllData","tablesToCreate","table","post","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onDeleteTable","onDeleteForm","availableTables","_c","$RefreshReg$"],"sources":["/Users/zilianghuang/Desktop/sql-checker/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css'; // Import the CSS file\nimport TableForm from './components/TableForm';\nimport TableList from './components/TableList';\nimport SQLPlayground from './components/SQLPlayground'; // Ensure this import is correct\nimport axios from 'axios';\n\nfunction App() {\n  const [tables, setTables] = useState([]);\n  const [tableForms, setTableForms] = useState([]);\n\n  useEffect(() => {\n    // Fetch existing tables to provide options for foreign keys\n    const fetchTables = async () => {\n      try {\n        const response = await axios.get('http://localhost:3002/api/tables');\n        setTables(response.data.tables);\n      } catch (error) {\n        console.error('Failed to fetch tables:', error);\n      }\n    };\n\n    fetchTables();\n  }, []);\n\n  const addTableForm = () => {\n    setTableForms([...tableForms, { id: Date.now(), tableName: '', columns: [{ name: '', dataType: 'varchar', foreignKey: '' }] }]);\n  };\n\n  const updateTableForm = (updatedForm) => {\n    setTableForms(tableForms.map(form => form.id === updatedForm.id ? updatedForm : form));\n  };\n\n  const deleteTable = async (tableName) => {\n    try {\n      console.log(`Attempting to delete table: ${tableName}`);\n      await axios.delete(`http://localhost:3002/api/tables/${tableName}`);\n      setTables(tables.filter(t => t.name !== tableName));\n    } catch (error) {\n      console.error('Failed to delete table:', error);\n    }\n  };\n\n  const deleteTableForm = (formId) => {\n    setTableForms(tableForms.filter(form => form.id !== formId));\n  };\n\n  const generateAllData = async () => {\n    try {\n      const tablesToCreate = tableForms.map(form => ({\n        name: form.tableName,\n        columns: form.columns,\n      }));\n\n      for (const table of tablesToCreate) {\n        await axios.post('http://localhost:3002/api/tables', table);\n      }\n\n      await axios.post('http://localhost:3002/api/generate-data');\n      alert('Tables created and random data generated for all tables.');\n      setTables(tablesToCreate);\n    } catch (error) {\n      console.error('Failed to generate data:', error);\n      alert('Failed to generate data.');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>SQL Database Creator</h1>\n      <button onClick={addTableForm}>Create Table</button>\n      {tableForms.map(form => (\n        <TableForm\n          key={form.id}\n          formId={form.id}\n          onDeleteTable={deleteTable}\n          onDeleteForm={deleteTableForm}\n          updateTableForm={updateTableForm}\n          availableTables={tables}\n        />\n      ))}\n      <button onClick={generateAllData}>Generate Data</button>\n      <TableList tables={tables} onDeleteTable={deleteTable} />\n      <SQLPlayground />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}